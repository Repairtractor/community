<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.MessageMapper">

    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <sql id="insertSql">
         from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <select id="selectConversations" resultType="Message">
        select
        <include refid="selectFields"></include>
        from message
        where id in (
        select max(id) from message
        where status != 2
        and from_id != 1
        and (from_id = #{userId} or to_id = #{userId})
        group by conversation_id
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>


    <select id="selectConversationRows" resultType="int" parameterType="int">
        select count(id)
        from message    where id in(select max(id)
        from message where from_id!=1 and status!=2 and (from_id = #{userId} or to_id = #{userId})
        group by conversation_id);
    </select>


    <select id="selectLetters" resultType="Message">
        select
        <include refid="selectFields"></include>
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
        order by id desc
        limit #{offset}, #{limit}
    </select>


    <select id="selectLetterUnReadCount" resultType="int">
        select count(id)
        from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>

    </select>


    <select id="selectLetterCount" resultType="int">
        select count(id)
        from message where conversation_id=#{conversationId};
    </select>

    <insert id="insertMessage" parameterType="Message">
        insert into message (<include refid="insertSql"></include>)
        values (#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <update id="updateMessageStatus" parameterType="int">
        update message set status=#{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!--这里为什么是in-->
    <select id="selectLatestMessage" resultType="Message">
        select <include refid="selectFields"></include> from message
        where id in (
            select max(id) from message
            where from_id=1 and status!=2
            and to_id=#{userId} and conversation_id=#{topic}
        )
    </select>

    <select id="selectMessageCount" resultType="_int">
        select count(id)from message
        where from_id=1 and status!=2 and to_id=#{userId} and conversation_id=#{topic}
    </select>

    <select id="selectUnReadCount" resultType="_int">
        select count(id) from message
        where from_id=1 and status=0 and to_id=#{userId}
        <if test="topic!=null">
            and conversation_id=#{topic}
        </if>
    </select>

    <select id="selectAllMessage" resultType="Message">
        select <include refid="selectFields"></include> from message
        where from_id=1 and status!=2 and to_id=#{userId} and conversation_id=#{topic}
        order by create_time desc
        limit #{offset },#{limit}
    </select>












</mapper>